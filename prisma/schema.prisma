generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id                String             @id @default(cuid())
  username          String
  email             String             @unique
  googleId          String?            @default("")
  profileImageUrl   String?
  hashedPassword    String?
  emailVerified     Boolean            @default(false)
  sessions          Session[]
  emailVerification EmailVerification[]
  oAuth             OAauth[]
  drawing           UserDrawing[] 
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model EmailVerification {
  id        String    @id @default(cuid())
  userId    String    @unique
  code      String
  sentAt    DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model OAauth {
  id              String   @id @default(cuid())
  userId          String
  provider        String
  providerUserId  String
  refreshToken    String
  accessToken     String
  expiresAt       DateTime
  user            User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Drawing {
  id     String   @id @default(cuid())
  url    String?  @default("")
  name   String
  users  UserDrawing[] 
}

model UserDrawing {
  drawingId  String
  userId  String
  user    User  @relation(references: [id], fields: [userId])
  drawing Drawing  @relation(references: [id], fields: [drawingId])
  @@id([drawingId, userId])
}